plugins {
    id 'io.qameta.allure' version '2.12.0'
    id 'io.qameta.allure-adapter' version '2.12.0'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'thread.qa'
version = '2.0.1'


dependencies {
    //proto
    implementation "io.grpc:grpc-protobuf:1.63.0"
    implementation "io.grpc:grpc-stub:1.63.0"
    implementation "com.google.protobuf:protobuf-java:3.25.3"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Logs
    testImplementation "ch.qos.logback:logback-classic:1.4.11"
    testImplementation "org.slf4j:slf4j-api:2.0.9"

    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter:5.11.0"

    // Allure
    testImplementation("io.qameta.allure:allure-junit5:2.29.0") {
        exclude group: "org.junit.jupiter"
    }
    testImplementation "io.qameta.allure:allure-grpc:2.29.0"

    // gRPC
    testImplementation "io.grpc:grpc-protobuf:1.63.0"
    testImplementation "io.grpc:grpc-stub:1.63.0"
    testImplementation "io.grpc:grpc-netty:1.63.0"
    testImplementation "com.google.protobuf:protobuf-java:3.25.3"
    testImplementation "com.google.protobuf:protobuf-java-util:3.25.3"
}



//генерация клиентов и моделей с помощью градл плагина через build
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.63.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}